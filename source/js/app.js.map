{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nVue.component('rss-widget', {\n    data: function data() {\n        return {\n            rss: {\n                entries: [],\n                meta: {\n                    title: 'RSS Widget',\n                    update: 'never'\n                }\n            }\n        };\n    },\n    filters: {\n        date: function date(d, dateOnly) {\n            d = new Date(d);\n            if (dateOnly != undefined) {\n                return d.toLocaleDateString();\n            }\n            return d.toLocaleDateString() + ' ' + d.toLocaleTimeString();\n        }\n    },\n    methods: {\n        loadRss: function loadRss(result) {\n            if (result.error) {\n                console.log(result.error);\n            } else {\n                console.log(result.feed.entries);\n                this.rss = result.feed;\n            }\n        },\n        scroll: function scroll(direction) {\n            this.start = this.start + this.limit * direction;\n        }\n    },\n    props: {\n        limit: {\n            default: function _default() {\n                return 5;\n            }\n        },\n        start: {\n            default: function _default() {\n                return 0;\n            }\n        },\n        url: null\n    },\n    ready: function ready() {\n        feednami.load(this.url, this.loadRss);\n    },\n    template: require('../pre/rss-widget.html')\n});\nVue.component('text-snippet', {\n    beforeCompile: function beforeCompile() {\n        this.fullText = this.fullText.replace(/(<([^>]+)>)/ig, \"\");\n    },\n    data: function data() {\n        return { max: 150 };\n    },\n    filters: {\n        snippet: function snippet(value) {\n            return value.substr(0, this.max).match(/.+\\s/);\n        }\n    },\n    methods: {\n        fits: function fits() {\n            return this.fullText.length < this.max;\n        }\n    },\n    props: ['full-text'],\n    template: require('../pre/text-snippet.html')\n});\n\n\n},{\"../pre/rss-widget.html\":2,\"../pre/text-snippet.html\":3}],2:[function(require,module,exports){\nmodule.exports = '<div class=\"panel panel-default\">\\n    <div class=\"panel-heading\"><i class=\"fa fa-archive\"></i> {{ rss.meta.title }}</div>\\n    <div class=\"panel-body\">\\n        <dl>\\n            <template v-for=\"entry in rss.entries | limitBy limit start\">\\n                <dt>\\n                    <a class=\"pull-right\" :href=\"entry.link\"><i class=\"fa fa-external-link text-primary\"></i></a>\\n                    {{ entry.title }} : {{ entry.date | date true }}\\n                </dt>\\n                <dd><text-snippet :full-text=\"entry.summary\"></text-snippet></dd>\\n            </template>\\n        </dl>\\n        <div class=\"clearfix\">\\n            <button @click=\"scroll(-1)\" type=\"button\" class=\"btn pull-left\" :disabled=\"start == 0\"><i class=\"fa fa-arrow-left\"></i></button>\\n            <button @click=\"scroll(1)\" type=\"button\" class=\"btn pull-right\" :disabled=\"start + limit > rss.entries.length\"><i class=\"fa fa-arrow-right\"></i></button>\\n        </div>\\n        <h6>Last Update: {{ rss.meta.date | date }}</h6>\\n    </div>\\n</div>';\n},{}],3:[function(require,module,exports){\nmodule.exports = '<span v-if=\"fullText.length < max\">\\n    {{ fullText }}\\n</span>\\n<span v-else>\\n    {{ fullText | snippet }}&hellip;\\n</span>';\n},{}]},{},[1]);\n"],"file":"app.js","sourceRoot":"/source/"}