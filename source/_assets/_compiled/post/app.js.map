{"version":3,"sources":["rss-widget.js","text-snippet.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["Vue.component('rss-widget', {\n    beforeCompile: function() {\n        if (!Cookies.getJSON(this.btoa(this.url)).collapsed) {\n            this.fetchFeed();\n        }\n    },\n    data: function() {\n        if (Cookies.getJSON(this.btoa(this.url)) == undefined) {\n            Cookies.set(this.btoa(this.url), {\n                articleLimit: 5,\n                collapsed: true,\n                start: 0\n            });\n        }\n        return {\n            articleLimit: Cookies.getJSON(this.btoa(this.url)).articleLimit,\n            collapsed: Cookies.getJSON(this.btoa(this.url)).collapsed,\n            start: Cookies.getJSON(this.btoa(this.url)).start,\n            rss: {\n                entries: [],\n                meta: {\n                    update: 'never'\n                }\n            }\n        };\n    },\n    filters: {\n        date: function(d, dateOnly) {\n            d = new Date(d);\n            if (dateOnly != undefined) {\n                return d.toLocaleDateString();\n            }\n            return d.toLocaleDateString() + ' ' + d.toLocaleTimeString();\n        }\n    },\n    methods: {\n        btoa: function(value) {\n            return btoa(value).replace('/', '-').replace('=', '_').replace('+', ':');\n        },\n        fetchFeed: function() {\n            feednami.load(this.url, this.loadRss);\n        },\n        hide: function() {\n            this.collapsed = true;\n            this.save();\n        },\n        save: function() {\n            Cookies.set(this.btoa(this.url), {\n                articleLimit: this.articleLimit,\n                collapsed: this.collapsed,\n                start: this.start\n            });\n        },\n        show: function() {\n            this.collapsed = false;\n            if (this.rss.entries.length == 0) {\n                this.fetchFeed();\n            }\n            this.save();\n        },\n        loadRss: function(result) {\n            if (result.error) {\n                console.log(result.error);\n            } else {\n                this.rss = result.feed;\n            }\n        },\n        scroll: function(direction) {\n            this.start = this.start + (this.articleLimit * parseInt(direction));\n            this.save();\n        }\n    },\n    props: {\n        'title': null,\n        'url': null\n    },\n    ready: function() {\n        $('#' + this.btoa(this.url)).on('show.bs.collapse', this.show);\n        $('#' + this.btoa(this.url)).on('hide.bs.collapse', this.hide);\n    },\n    template: require('../pre/rss-widget.html'),\n    watch: {\n        articleLimit: function(newVal, oldVal) {\n            this.start = 0;\n            this.save();\n        }\n    }\n});","Vue.component('text-snippet', {\n    beforeCompile: function() {\n        this.fullText = this.fullText.replace(/(<([^>]+)>)/ig,\"\");\n    },\n    data: function() {\n        return { max: 150 };\n    },\n    filters: {\n        snippet: function (value) {\n            return value.substr(0, this.max).match(/.+\\s/);\n        }\n    },\n    methods: {\n        fits: function() {\n            return this.fullText.length < this.max;\n        }\n    },\n    props: ['full-text'],\n    template: require('../pre/text-snippet.html')\n});"],"sourceRoot":"/source/"}